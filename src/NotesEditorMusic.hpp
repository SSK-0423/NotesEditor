#pragma once
#include "OpenFileExplorer.hpp"
#include "AudioSource.hpp"
#include "Singleton.hpp"
#include "picojson.h"

namespace NotesEditor
{
	class NotesEditorMusic : public Singleton<NotesEditorMusic>{
		friend Singleton<NotesEditorMusic>;
	private:
		NotesEditorMusic();
		OpenFileExplorer openFileExplorer;
		Engine::Components::AudioSource audioSource;
		picojson::value json;
		std::string musicName;
		float bpm;
		int beat;

		bool isMusicLoaded;
		bool isPlaying;

		void JsonParse(picojson::value json);
	public:
		//曲読み込み
		void LoadMusic();
		//譜面ファイルからの曲読み込み
		void LoadMusicFromFumen(picojson::value fumen);
		//曲の再生・停止
		void PlayStopMusic();
		//曲の再生
		void PlayMusic();
		//曲の停止
		void StopMusic();
		//曲を最初から再生
		void ReplayMusic();
		//曲の長さを取得
		int GetTotalTime() const;
		//現在の再生位置を取得
		int GetElapsedTime() const;
		//曲名取得
		std::string GetName() const;
		//BPM取得
		float GetBPM() const;
		//拍子取得
		int GetBeat() const;
		//曲が読み込まれたかどうかを取得
		bool IsMusicLoaded();
		//曲が再生中がどうか
		bool IsPlaying();
		//曲の読み込みが完了したことを通知
		void CompleteMusicLoad();
		//総再生時間と経過時間表示
		void MusicTimeDraw();
		//再生開始位置セット
		void SetCurrentTime(long long time);
	};
}